// ===== –°–ò–°–¢–ï–ú–ê –ì–ï–û–ì–†–ê–§–ò–ß–ï–°–ö–û–ì–û –†–ê–°–ß–ï–¢–ê –î–û–°–¢–ê–í–ö–ò =====

// –ë–∞–∑–æ–≤—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å–∫–ª–∞–¥–æ–≤ –≤ –ö–∏—Ç–∞–µ (—Å—Ä–µ–¥–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ü–µ–Ω—Ç—Ä–æ–≤)
const CHINA_WAREHOUSES = {
    primary: { lat: 31.2304, lng: 121.4737, name: "Shanghai" }, // –®–∞–Ω—Ö–∞–π
    secondary: { lat: 23.1291, lng: 113.2644, name: "Guangzhou" }, // –ì—É–∞–Ω—á–∂–æ—É
    tertiary: { lat: 39.9042, lng: 116.4074, name: "Beijing" } // –ü–µ–∫–∏–Ω
};

// –¢–∞—Ä–∏—Ñ—ã –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ –∑–æ–Ω–∞–º (USD –∑–∞ 1–∫–≥)
const DELIVERY_ZONES = {
    zone1: { // –ê–∑–∏—è - –±–ª–∏–∑–∫–æ –∫ –ö–∏—Ç–∞—é
        countries: ['RU', 'KZ', 'KG', 'UZ', 'TJ', 'MN', 'KP', 'KR', 'JP', 'VN', 'TH', 'MY', 'SG', 'PH', 'ID', 'LA', 'KH', 'MM'],
        baseRate: 8,
        expressRate: 15,
        premiumRate: 25,
        deliveryTime: {
            economy: "12-20 –¥–Ω–µ–π",
            express: "7-12 –¥–Ω–µ–π", 
            premium: "3-7 –¥–Ω–µ–π"
        }
    },
    zone2: { // –ï–≤—Ä–æ–ø–∞ –∏ –ë–ª–∏–∂–Ω–∏–π –í–æ—Å—Ç–æ–∫
        countries: ['BY', 'UA', 'MD', 'GE', 'AM', 'AZ', 'TR', 'DE', 'FR', 'IT', 'ES', 'PL', 'CZ', 'SK', 'HU', 'RO', 'BG', 'GR', 'NL', 'BE', 'AT', 'CH', 'SE', 'NO', 'DK', 'FI', 'EE', 'LV', 'LT', 'IE', 'GB', 'PT', 'MT', 'CY', 'LU', 'SI', 'HR', 'BA', 'RS', 'ME', 'MK', 'AL', 'IL', 'PS', 'JO', 'LB', 'SY', 'IQ', 'IR', 'SA', 'AE', 'QA', 'KW', 'BH', 'OM', 'YE', 'EG', 'LY', 'TN', 'DZ', 'MA', 'SD'],
        baseRate: 12,
        expressRate: 22,
        premiumRate: 35,
        deliveryTime: {
            economy: "15-25 –¥–Ω–µ–π",
            express: "8-15 –¥–Ω–µ–π",
            premium: "4-8 –¥–Ω–µ–π"
        }
    },
    zone3: { // –°–µ–≤–µ—Ä–Ω–∞—è –ê–º–µ—Ä–∏–∫–∞
        countries: ['US', 'CA', 'MX', 'GT', 'BZ', 'SV', 'HN', 'NI', 'CR', 'PA'],
        baseRate: 15,
        expressRate: 28,
        premiumRate: 45,
        deliveryTime: {
            economy: "18-30 –¥–Ω–µ–π",
            express: "10-18 –¥–Ω–µ–π",
            premium: "5-10 –¥–Ω–µ–π"
        }
    },
    zone4: { // –Æ–∂–Ω–∞—è –ê–º–µ—Ä–∏–∫–∞ –∏ –ê—Ñ—Ä–∏–∫–∞
        countries: ['BR', 'AR', 'CL', 'PE', 'CO', 'VE', 'EC', 'BO', 'PY', 'UY', 'GY', 'SR', 'GF', 'ZA', 'NG', 'EG', 'KE', 'UG', 'TZ', 'RW', 'BI', 'CD', 'CG', 'CM', 'CF', 'TD', 'NE', 'BF', 'ML', 'SN', 'GN', 'SL', 'LR', 'CI', 'GH', 'TG', 'BJ', 'NG', 'GA', 'GQ', 'ST', 'AO', 'ZM', 'ZW', 'BW', 'LS', 'SZ', 'MZ', 'MW', 'MG', 'MU', 'SC', 'KM', 'ET', 'ER', 'DJ', 'SO', 'SS'],
        baseRate: 18,
        expressRate: 32,
        premiumRate: 50,
        deliveryTime: {
            economy: "20-35 –¥–Ω–µ–π",
            express: "12-22 –¥–Ω–µ–π",
            premium: "6-12 –¥–Ω–µ–π"
        }
    },
    zone5: { // –û–∫–µ–∞–Ω–∏—è –∏ –æ—Ç–¥–∞–ª–µ–Ω–Ω—ã–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏
        countries: ['AU', 'NZ', 'PG', 'FJ', 'SB', 'NC', 'VU', 'WS', 'TO', 'TV', 'NR', 'KI', 'PW', 'FM', 'MH'],
        baseRate: 20,
        expressRate: 35,
        premiumRate: 55,
        deliveryTime: {
            economy: "22-40 –¥–Ω–µ–π",
            express: "14-25 –¥–Ω–µ–π",
            premium: "7-14 –¥–Ω–µ–π"
        }
    }
};

// –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å—Ç—Ä–∞–Ω
const SPECIAL_RATES = {
    'RU': { // –†–æ—Å—Å–∏—è - –æ—Å–æ–±—ã–µ —Ç–∞—Ä–∏—Ñ—ã
        baseRate: 6,
        expressRate: 12,
        premiumRate: 20,
        deliveryTime: {
            economy: "10-18 –¥–Ω–µ–π",
            express: "5-10 –¥–Ω–µ–π",
            premium: "3-6 –¥–Ω–µ–π"
        }
    },
    'US': { // –°–®–ê - –≤—ã—Å–æ–∫–∏–π —Å–ø—Ä–æ—Å
        baseRate: 14,
        expressRate: 26,
        premiumRate: 42,
        deliveryTime: {
            economy: "16-28 –¥–Ω–µ–π",
            express: "9-16 –¥–Ω–µ–π",
            premium: "4-9 –¥–Ω–µ–π"
        }
    },
    'DE': { // –ì–µ—Ä–º–∞–Ω–∏—è - –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏–π —Ö–∞–±
        baseRate: 10,
        expressRate: 19,
        premiumRate: 30,
        deliveryTime: {
            economy: "12-22 –¥–Ω–µ–π",
            express: "6-12 –¥–Ω–µ–π",
            premium: "3-6 –¥–Ω–µ–π"
        }
    }
};

// –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –¥–ª—è –≤–µ—Å–∞ (–Ω–µ–ª–∏–Ω–µ–π–Ω–∞—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∏—è)
const WEIGHT_MULTIPLIERS = {
    light: { min: 0, max: 1, multiplier: 1.0 },      // –î–æ 1–∫–≥
    medium: { min: 1, max: 5, multiplier: 0.9 },     // 1-5–∫–≥ (—Å–∫–∏–¥–∫–∞ –∑–∞ –æ–±—ä–µ–º)
    heavy: { min: 5, max: 15, multiplier: 0.8 },     // 5-15–∫–≥
    bulk: { min: 15, max: 50, multiplier: 0.7 },     // 15-50–∫–≥
    cargo: { min: 50, max: 999, multiplier: 0.6 }    // –°–≤—ã—à–µ 50–∫–≥
};

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏
const ADDITIONAL_SERVICES = {
    insurance: {
        name: "–°—Ç—Ä–∞—Ö–æ–≤–∫–∞ –ø–æ—Å—ã–ª–∫–∏",
        icon: "üõ°Ô∏è",
        description: "–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –Ω–∞ –ø–æ–ª–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞",
        calculateCost: (cartTotal) => Math.max(5, cartTotal * 0.02) // 2% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏, –º–∏–Ω–∏–º—É–º $5
    },
    fastProcessing: {
        name: "–£—Å–∫–æ—Ä–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞",
        icon: "‚ö°",
        description: "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ",
        cost: 15
    },
    tracking: {
        name: "–†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ",
        icon: "üìç",
        description: "SMS –∏ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ—Å—ã–ª–∫–∏",
        cost: 8
    },
    packaging: {
        name: "–£—Å–∏–ª–µ–Ω–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞",
        icon: "üì¶",
        description: "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞ –¥–ª—è —Ö—Ä—É–ø–∫–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤",
        cost: 12
    },
    consolidation: {
        name: "–ö–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏—è –ø–æ—Å—ã–ª–æ–∫",
        icon: "üì¨", 
        description: "–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞–∫–∞–∑–æ–≤ –≤ –æ–¥–Ω—É –ø–æ—Å—ã–ª–∫—É",
        cost: 8
    }
};

// –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–æ–Ω—ã –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ –∫–æ–¥—É —Å—Ç—Ä–∞–Ω—ã
function getDeliveryZone(countryCode) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã
    if (SPECIAL_RATES[countryCode]) {
        return { type: 'special', data: SPECIAL_RATES[countryCode] };
    }
    
    // –ò—â–µ–º –≤ –∑–æ–Ω–∞—Ö
    for (const [zoneName, zoneData] of Object.entries(DELIVERY_ZONES)) {
        if (zoneData.countries.includes(countryCode)) {
            return { type: 'zone', data: zoneData, zone: zoneName };
        }
    }
    
    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - —Å–∞–º–∞—è –¥–æ—Ä–æ–≥–∞—è –∑–æ–Ω–∞
    return { type: 'zone', data: DELIVERY_ZONES.zone5, zone: 'zone5' };
}

// –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –≤–µ—Å–∞
function getWeightMultiplier(totalWeight) {
    for (const category of Object.values(WEIGHT_MULTIPLIERS)) {
        if (totalWeight >= category.min && totalWeight < category.max) {
            return category.multiplier;
        }
    }
    return WEIGHT_MULTIPLIERS.cargo.multiplier; // –î–ª—è –æ—á–µ–Ω—å –±–æ–ª—å—à–∏—Ö –≤–µ—Å–æ–≤
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
function calculateDeliveryByAddress(address, cartItems, cartTotal) {
    const result = {
        address: address,
        totalWeight: 0,
        methods: [],
        recommendedMethod: null,
        additionalServices: {},
        error: null
    };

    try {
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–∏–π –≤–µ—Å
        result.totalWeight = cartItems.reduce((sum, item) => {
            const itemWeight = item.weight || 0.5; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 0.5–∫–≥ –Ω–∞ —Ç–æ–≤–∞—Ä
            return sum + (itemWeight * item.quantity);
        }, 0);

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–æ–Ω—É –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ —Å—Ç—Ä–∞–Ω–µ
        const countryCode = address.countryCode || 'RU'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –†–æ—Å—Å–∏—è
        const zoneInfo = getDeliveryZone(countryCode);
        const weightMultiplier = getWeightMultiplier(result.totalWeight);

        // –§–æ—Ä–º–∏—Ä—É–µ–º –º–µ—Ç–æ–¥—ã –¥–æ—Å—Ç–∞–≤–∫–∏
        const rates = zoneInfo.data;
        
        result.methods = [
            {
                id: 'economy',
                name: '–≠–∫–æ–Ω–æ–º–∏—á–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞',
                icon: 'üöõ',
                description: '–°–∞–º—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏',
                baseRate: rates.baseRate,
                cost: Math.round(rates.baseRate * result.totalWeight * weightMultiplier * 100) / 100,
                weight: result.totalWeight,
                deliveryTime: rates.deliveryTime.economy,
                zone: zoneInfo.zone || 'special'
            },
            {
                id: 'express', 
                name: '–≠–∫—Å–ø—Ä–µ—Å—Å –¥–æ—Å—Ç–∞–≤–∫–∞',
                icon: '‚úàÔ∏è',
                description: '–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –∞–≤–∏–∞–ø–æ—á—Ç–æ–π',
                baseRate: rates.expressRate,
                cost: Math.round(rates.expressRate * result.totalWeight * weightMultiplier * 100) / 100,
                weight: result.totalWeight,
                deliveryTime: rates.deliveryTime.express,
                zone: zoneInfo.zone || 'special'
            },
            {
                id: 'premium',
                name: '–ü—Ä–µ–º–∏—É–º –¥–æ—Å—Ç–∞–≤–∫–∞',
                icon: 'üöÄ',
                description: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä—Å–∫–æ–π —Å–ª—É–∂–±–æ–π',
                baseRate: rates.premiumRate,
                cost: Math.round(rates.premiumRate * result.totalWeight * weightMultiplier * 100) / 100,
                weight: result.totalWeight,
                deliveryTime: rates.deliveryTime.premium,
                zone: zoneInfo.zone || 'special'
            }
        ];

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –º–µ—Ç–æ–¥ (—Å—Ä–µ–¥–Ω–∏–π –ø–æ —Ü–µ–Ω–µ/—Å–∫–æ—Ä–æ—Å—Ç–∏)
        result.recommendedMethod = result.methods[1]; // Express –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

        // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏
        result.additionalServices = {};
        for (const [serviceId, service] of Object.entries(ADDITIONAL_SERVICES)) {
            result.additionalServices[serviceId] = {
                ...service,
                cost: service.calculateCost ? service.calculateCost(cartTotal) : service.cost
            };
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∞–Ω–µ –∏ —Ä–µ–≥–∏–æ–Ω–µ
        result.deliveryInfo = {
            country: address.country,
            countryCode: countryCode,
            zone: zoneInfo.zone || 'special',
            weightCategory: getWeightCategory(result.totalWeight),
            weightMultiplier: weightMultiplier
        };

    } catch (error) {
        result.error = `–û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: ${error.message}`;
    }

    return result;
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤–µ—Å–∞
function getWeightCategory(weight) {
    for (const [category, data] of Object.entries(WEIGHT_MULTIPLIERS)) {
        if (weight >= data.min && weight < data.max) {
            return category;
        }
    }
    return 'cargo';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Å—Ç—Ä–∞–Ω
function getSupportedCountries() {
    const countries = [];
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω—ã –∏–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤
    for (const countryCode of Object.keys(SPECIAL_RATES)) {
        countries.push({ code: countryCode, zone: 'special' });
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω—ã –∏–∑ –∑–æ–Ω
    for (const [zoneName, zoneData] of Object.entries(DELIVERY_ZONES)) {
        for (const countryCode of zoneData.countries) {
            if (!countries.find(c => c.code === countryCode)) {
                countries.push({ code: countryCode, zone: zoneName });
            }
        }
    }
    
    return countries.sort((a, b) => a.code.localeCompare(b.code));
}

module.exports = {
    calculateDeliveryByAddress,
    getDeliveryZone,
    getSupportedCountries,
    DELIVERY_ZONES,
    SPECIAL_RATES,
    ADDITIONAL_SERVICES
};